"""
Course Project 6490: Secure Authentication in IoT Devices
Team: Chandrasekhar Nagarajan, Damodar Sahasrabudhe, Gurupragaash Annasamy Mani, Praveen Thiraviya Rathinam
Description: Client for RSA
Code connects to server and RSA signature and sends them to server along with temparature data
"""

import M2Crypto
import random
from utils import *
from datetime import datetime 
from socket import *
import pickle
import sys
HIGH_TEMP=100
LOW_TEMP=-30
NUM_TIMES=10

#temp = '72'	#dummy temprature set. In real world this value will come from sensors.
#sign using RSA.
def rsa_sign(temp):
	time = str(datetime.now())

	data=dict()	#set up dictionary to handle data easily.
	data['temp'] = temp
	data['time'] = str(time)		#adding timestamp to avoid replay attack

	message = temp + time	#word project is used as seperator. Not using semicolon or comma as it may be generated by signature.
	ReadRSA = M2Crypto.RSA.load_key('private.pem')	#load private key from file
	start = datetime.now()
	sign = ReadRSA.sign_rsassa_pss(message)	#sign data using RSA 
	end = datetime.now()

	
	timeTaken = end-start	#time required to sign.
	#print "time taken for signing: ",timeTaken

	data['sign'] = sign

	#print "Sending message: ", data


	serverName = sys.argv[1]
	serverPort = int(sys.argv[2])
	clientSocket = socket(AF_INET, SOCK_STREAM)
	clientSocket.connect((serverName,serverPort))


	data = pickle.dumps(data)
	clientSocket.send("%06x" % len(data))
	clientSocket.send(data)
	clientSocket.close()
	return str(timeTaken)[5:]

print("Before signing Get ram is %s Get disk is %s Get load is %s Get temp is %s" %(get_ram(), get_disk(), get_load(), get_temperature())) 
timeTakenList = list()
for x in range (0,NUM_TIMES):	#repeate experiment number of times.
	timeTakenList.append(rsa_sign(str(random.sample(xrange(LOW_TEMP,HIGH_TEMP),1))))

print("After signing Get ram is %s Get disk is %s Get load is %s Get temp is %s" %(get_ram(), get_disk(), get_load(), get_temperature())) 
write_data_to_file(timeTakenList, "timeDelayFromRSA")	#save output to file to plot later.



